name: Deploy Embedding Service

on:
  push:
    branches:
      - release-embedding-service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Create .env file
        run: | 
          cd ./embedding_service
          echo "${{ secrets.EMBEDDING_ENV_FILE }}" > .env    

      - name: Install dependencies
        run: | 
          cd ./embedding_service
          python -m pip install --upgrade pip
          pip install wheel
          pip install "fastapi[standard]"
          pip install -r requirements.txt

      - name: Remove .env file
        run: |
          cd ./embedding_service
          rm .env
  
  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      MONGO_HOST: 127.0.0.1 
      RABBITMQ_HOST: 127.0.0.1
    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672  
          - 15672:15672 
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Create .env file
        run: |
          cd ./embedding_service
          echo "${{ secrets.EMBEDDING_TEST_ENV_FILE }}" > .env   

      - name: Install dependencies
        run: | 
          cd ./embedding_service
          python -m pip install --upgrade pip
          pip install wheel
          pip install "fastapi[standard]"
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cd ./embedding_service
          pytest

      - name: Remove .env file
        run: |
          cd ./embedding_service
          rm .env
         
  deploy:
    needs: 
      - build
      - test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create .env file
      run: |
          cd ./embedding_service
          echo "${{ secrets.EMBEDDING_ENV_FILE }}" > .env

    - name: SSH and Remove old files
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          rm -rf ${{ secrets.SERVER_LOCATION }}/github/workspace/embedding_service
    
    - name: SCP files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: "${{ secrets.SERVER_HOST }}"
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "${{ github.workspace }}/embedding_service"
        target: "${{ secrets.SERVER_LOCATION }}"
    
    - name: SSH and Docker build
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.SERVER_LOCATION }}/github/workspace/embedding_service
          docker build -t ${{ secrets.EMBEDDING_IMAGE_NAME }}:${{ secrets.EMBEDDING_IMAGE_TAG }} .
          docker image prune -f
    
    - name: Remove .env file
      run: |
          cd ./embedding_service
          rm .env
